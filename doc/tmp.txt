NOP, LXI, STAX, INX, INR, DCR, MVI, RLC, NOP, DAD, LDAX, DCX, INR, DCR, MVI, RRC, NOP, LXI, STAX, INX, INR, DCR, MVI, RAL, NOP, DAD, LDAX, DCX, INR, DCR, MVI, RAR, NOP, LXI, STAX, INX, INR, DCR, MVI, DAA, NOP, DAD, LDAX, DCX, INR, DCR, MVI, CMA, NOP, LXI, STAX, INX, INR, DCR, MVI, STC, NOP, DAD, LDAX, DCX, INR, DCR, MVI, CMC, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, ADD, ADD, ADD, ADD, ADD, ADD, ADD, ADD, ADC, ADC, ADC, ADC, ADC, ADC, ADC, ADC, SUB, SUB, SUB, SUB, SUB, SUB, SUB, SUB, SBB, SBB, SBB, SBB, SBB, SBB, SBB, SBB, ANA, ANA, ANA, ANA, ANA, ANA, ANA, ANA, XRA, XRA, XRA, XRA, XRA, XRA, XRA, XRA, ORA, ORA, ORA, ORA, ORA, ORA, ORA, ORA, CMP, CMP, CMP, CMP, CMP, CMP, CMP, CMP, RETcond, POP, JMPcond, JMP, CALLcond, PUSH, ADI, RST, RETcond, RET, JMPcond, NOP, CALLcond, CALL, ACI, RST, RETcond, POP, JMPcond, OUT, CALLcond, PUSH, SUI, RST, RETcond, NOP, JMPcond, IN, CALLcond, LXI, SBI, RST, RETcond, POP, JMPcond, XTHL, CALLcond, PUSH, ANI, RST, RETcond, PCHL, JMPcond, XCHG, CALLcond, SUB, XRI, RST, RETcond, POP, JMPcond, DI, CALLcond, PUSH, ORI, RST, RETcond, SPHL, JMPcond, EI, CALLcond, LXI, CPI, RST

NOP, LXI, STAX, INX, INR, DCR, MVI, RLC, NOP, DAD, LDAX, DCX, INR, DCR, MVI, RRC, 
NOP, LXI, STAX, INX, INR, DCR, MVI, RAL, NOP, DAD, LDAX, DCX, INR, DCR, MVI, RAR, 
NOP, LXI, _STAX_, INX, INR, DCR, MVI, DAA, NOP, DAD, _LDAX_, DCX, INR, DCR, MVI, CMA, 
NOP, LXI, _STAX_, INX, INR, DCR, MVI, STC, NOP, DAD, _LDAX_, DCX, INR, DCR, MVI, CMC, 
MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, 
MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, 
MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, 
MOV, MOV, MOV, MOV, MOV, MOV, _MOV_, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, MOV, 
ADD, ADD, ADD, ADD, ADD, ADD, ADD, ADD, ADC, ADC, ADC, ADC, ADC, ADC, ADC, ADC, 
SUB, SUB, SUB, SUB, SUB, SUB, SUB, SUB, SBB, SBB, SBB, SBB, SBB, SBB, SBB, SBB, 
ANA, ANA, ANA, ANA, ANA, ANA, ANA, ANA, XRA, XRA, XRA, XRA, XRA, XRA, XRA, XRA, 
ORA, ORA, ORA, ORA, ORA, ORA, ORA, ORA, CMP, CMP, CMP, CMP, CMP, CMP, CMP, CMP, 
RETcond, POP, JMPcond, JMP, CALLcond, PUSH, ADI, RST, RETcond, RET, JMPcond, _NOP_, CALLcond, CALL, ACI, RST, 
RETcond, POP, JMPcond, OUT, CALLcond, PUSH, SUI, RST, RETcond, _NOP_, JMPcond, IN, CALLcond, _LXI_, SBI, RST, 
RETcond, POP, JMPcond, XTHL, CALLcond, PUSH, ANI, RST, RETcond, PCHL, JMPcond, XCHG, CALLcond, _SUB_, XRI, RST, 
RETcond, POP, JMPcond, DI, CALLcond, PUSH, ORI, RST, RETcond, SPHL, JMPcond, EI, CALLcond, _LXI_, CPI, RST



Useful lldb commands
--------------------
breakpoint set --file Intel8080.cpp --line 60
breakpoint modify --condition 'i == 10'


Registers
- General purpose
    - 8-bit
    - 16-bit
    - [32, 64, Multipurpose (multi-size like x86 assembly)]
- Register pair
    - 16 bit
    - [32, 64]
Flags
- 8-bit
- [16, 32, 64]
Latch/Flip-flops
Pin?
Bit
Byte
Word
[double word, quad word]
CPU
RAM
- Address?
- Sidebar
- Contents